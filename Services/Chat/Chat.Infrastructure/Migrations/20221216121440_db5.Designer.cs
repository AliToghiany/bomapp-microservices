// <auto-generated />
using System;
using Chat.Infrastructure.Persistense;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chat.Infrastructure.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20221216121440_db5")]
    partial class db5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.GroupBanUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupBanUsers");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.GroupProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupProfiles");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.Join", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleOfJoinSetting")
                        .HasColumnType("int");

                    b.Property<bool>("SendGif")
                        .HasColumnType("bit");

                    b.Property<bool>("SendMedia")
                        .HasColumnType("bit");

                    b.Property<bool>("SendMessage")
                        .HasColumnType("bit");

                    b.Property<bool>("SendSticker")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Joins");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.JoinGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("InviteByLink")
                        .HasColumnType("bit");

                    b.Property<long>("InvitedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("JoinGroups");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GifId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long?>("JoinGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReplyMessageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StickerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ToUser_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("User_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("JoinGroupId");

                    b.HasIndex("ReplyMessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.Seen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Seens");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.GroupBanUser", b =>
                {
                    b.HasOne("Chat.Domain.Entities.GroupE.Group", "Group")
                        .WithMany("GroupBanUsers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.GroupProfile", b =>
                {
                    b.HasOne("Chat.Domain.Entities.GroupE.Group", "Group")
                        .WithMany("GroupProfiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.Join", b =>
                {
                    b.HasOne("Chat.Domain.Entities.GroupE.Group", "Group")
                        .WithMany("Joins")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.File", b =>
                {
                    b.HasOne("Chat.Domain.Entities.MessageE.Message", null)
                        .WithMany("Files")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.Message", b =>
                {
                    b.HasOne("Chat.Domain.Entities.GroupE.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId");

                    b.HasOne("Chat.Domain.Entities.MessageE.JoinGroup", "JoinGroup")
                        .WithMany("Messages")
                        .HasForeignKey("JoinGroupId");

                    b.HasOne("Chat.Domain.Entities.MessageE.Message", "ReplyMessage")
                        .WithMany()
                        .HasForeignKey("ReplyMessageId");

                    b.Navigation("Group");

                    b.Navigation("JoinGroup");

                    b.Navigation("ReplyMessage");
                });

            modelBuilder.Entity("Chat.Domain.Entities.GroupE.Group", b =>
                {
                    b.Navigation("GroupBanUsers");

                    b.Navigation("GroupProfiles");

                    b.Navigation("Joins");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.JoinGroup", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Chat.Domain.Entities.MessageE.Message", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
