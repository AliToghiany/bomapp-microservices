@using System.Net.Http.Headers
@using Tewr.Blazor.FileReader
@inject IFileReaderService FileReaderService;
@inject IChatService _chatService

            
<div class="upload-btn-wrapper">
    <button class="btn">Upload a file</button>
    <input type="file" name="myfile" />
</div>
<style>
    .upload-btn-wrapper {
        position: relative;
        overflow: hidden;
        display: inline-block;
    }

    .btn {
        border: 2px solid var(--theme-color);
        color: #dfdfdf;
        background-color: var(--button-bg-color);
        padding: 8px 20px;
        border-radius: 8px;
        font-size: 20px;
        font-weight: bold;
    }

    .upload-btn-wrapper input[type=file] {
        font-size: 100px;
        position: absolute;
        left: 0;
        top: 0;
        opacity: 0;
    }
</style>

@code {

    private ElementReference _input;
    [Parameter]
    public string ImgUrl { get; set; }
    [Parameter]
    public EventCallback<string> OnChange { get; set; }
    private async Task HandleSelected(){
        foreach (var file in await  FileReaderService.CreateReference(_input).EnumerateFilesAsync())
        {
            if (file != null)
            {
                var fileInfo = await file.ReadFileInfoAsync();
                using (var ms = await file.CreateMemoryStreamAsync(4 * 1024))
                {
                    var content = new MultipartFormDataContent();
                    content.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data");
                    content.Add(new StreamContent(ms, Convert.ToInt32(ms.Length)), "image", fileInfo.Name);
                    ImgUrl= await _chatService.UploadImageGroup(content);
                    ImgUrl = "https://localhost:44374/"+ ImgUrl.Replace(@"\", "/");
                    await OnChange.InvokeAsync(ImgUrl);
                }
            }
        }
    }
}
