@page "/chats"
@page "/chats/{typeChat}/{chatId}"

@using Application.WASM.IndexDbEntities
@using Application.WASM.Models
@using Application.WASM.Repository.Interface
@layout ChatLayout
@inject IChatRepository _chatRepository
@inject HubConnect _hubConnect;
@inject IChatService _chatService;
@inject IJSRuntime js;
 <div class="wrapper">
  <div class="conversation-area">
     <div class="chat-area-header" ><div class="chat-area-title" >CodePen Group</div>
  </div>
    @* @foreach(var item in RecentChats)
     {
         if (item.Group!=null)
            {
                 <div class="msg">
    <img class="msg-profile" src="" alt="" />
    <div class="msg-detail">
     <div class="msg-username">@item.Group.Name</div>
     <div class="msg-content">
      <span class="msg-message">@item.Message.Text</span>
      <span class="msg-date">@item.Message.CreatedDate.ToLocalTime()</span>
     </div>
    </div>
   </div>
            }
  
     }*@

   <a class="add" @onclick="OpenModal"></a>
  
  
   <div class="overlay"></div>
  </div> 
  <div class="chat-area">
        <NewMessage @ref="@RefNewMessage"></NewMessage>
  @if (chatId!=null)
    {

       

@if (typeChat=="group")
{
  @* <div class="chat-area-header">
    <div class="chat-area-title">@group.Group.Name</div>
    <div class="chat-area-group">
    @foreach (var item in MembersOfGroup.ResponseUsers.Take(3))
    {
          <img class="chat-area-profile" src="@item.ImagesProfileResponses" alt="" />                   
    }
    
    
     <span>+@MembersOfGroup.MemberCount</span>
    </div>
   </div>
   <div class="chat-area-main">
   
   </div>*@
   }
   <div class="chat-area-footer">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video">
     <path d="M23 7l-7 5 7 5V7z" />
     <rect x="1" y="5" width="15" height="14" rx="2" ry="2" />
    </svg>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-image">
     <rect x="3" y="3" width="18" height="18" rx="2" ry="2" />
     <circle cx="8.5" cy="8.5" r="1.5" />
     <path d="M21 15l-5-5L5 21" />
    </svg>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus-circle">
     <circle cx="12" cy="12" r="10" />
     <path d="M12 8v8M8 12h8" />
    </svg>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-paperclip">
     <path d="M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48" />
    </svg>
    <input type="text" placeholder="Type something here..." />
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-smile">
     <circle cx="12" cy="12" r="10" />
     <path d="M8 14s1.5 2 4 2 4-2 4-2M9 9h.01M15 9h.01" />
    </svg>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-up">
     <path d="M14 9V5a3 3 0 00-3-3l-4 9v11h11.28a2 2 0 002-1.7l1.38-9a2 2 0 00-2-2.3zM7 22H4a2 2 0 01-2-2v-7a2 2 0 012-2h3" />
    </svg>
   </div>

        
    }
  </div>
  <div class="detail-area">
   <div class="detail-area-header">
    <div class="msg-profile group">
     <svg viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1">
      <path d="M12 2l10 6.5v7L12 22 2 15.5v-7L12 2zM12 22v-6.5" />
      <path d="M22 8.5l-10 7-10-7" />
      <path d="M2 15.5l10-7 10 7M12 2v6.5" />
     </svg>
    </div>
    <div class="detail-title">CodePen Group</div>
    <div class="detail-subtitle">Created by Aysenur, 1 May 2020</div>
    <div class="detail-buttons">
     <button class="detail-button">
      <svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor" stroke="currentColor" stroke-width="0" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone">
       <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z" />
      </svg>
      Call Group
     </button>
     <button class="detail-button">
      <svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor" stroke="currentColor" stroke-width="0" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video">
       <path d="M23 7l-7 5 7 5V7z" />
       <rect x="1" y="5" width="15" height="14" rx="2" ry="2" />
      </svg>
      Video Chat
     </button>
    </div>
   </div>
   <div class="detail-changes">
    <input type="text" placeholder="Search in Conversation">
    <div class="detail-change">
     Change Color
     <div class="colors">
      <div class="color blue selected" data-color="blue"></div>
      <div class="color purple" data-color="purple"></div>
      <div class="color green" data-color="green"></div>
      <div class="color orange" data-color="orange"></div>
     </div>
    </div>
    <div class="detail-change">
     Change Emoji
     <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-up">
      <path d="M14 9V5a3 3 0 00-3-3l-4 9v11h11.28a2 2 0 002-1.7l1.38-9a2 2 0 00-2-2.3zM7 22H4a2 2 0 01-2-2v-7a2 2 0 012-2h3" />
     </svg>
    </div>
   </div>
   <div class="detail-photos">
    <div class="detail-photo-title">
     <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-image">
      <rect x="3" y="3" width="18" height="18" rx="2" ry="2" />
      <circle cx="8.5" cy="8.5" r="1.5" />
      <path d="M21 15l-5-5L5 21" />
     </svg>
     Shared photos
    </div>
    <div class="detail-photo-grid">
     <img src="https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2168&q=80" />
     <img src="https://images.unsplash.com/photo-1516085216930-c93a002a8b01?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80" />
     <img src="https://images.unsplash.com/photo-1458819714733-e5ab3d536722?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=933&q=80" />
     <img src="https://images.unsplash.com/photo-1520013817300-1f4c1cb245ef?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2287&q=80" />
     <img src="https://images.unsplash.com/photo-1494438639946-1ebd1d20bf85?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2247&q=80" />
     <img src="https://images.unsplash.com/photo-1559181567-c3190ca9959b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1300&q=80" />
     <img src="https://images.unsplash.com/photo-1560393464-5c69a73c5770?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1301&q=80" />
     <img src="https://images.unsplash.com/photo-1506619216599-9d16d0903dfd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2249&q=80" />
     <img src="https://images.unsplash.com/photo-1481349518771-20055b2a7b24?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2309&q=80" />

     <img src="https://images.unsplash.com/photo-1473170611423-22489201d919?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2251&q=80" />
     <img src="https://images.unsplash.com/photo-1579613832111-ac7dfcc7723f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80" />
     <img src="https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2189&q=80" />
    </div>
    <div class="view-more">View More</div>
   </div>
   <a href="https://twitter.com/AysnrTrkk" class="follow-me" target="_blank">
    <span class="follow-text">
     <svg viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1">
      <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
     </svg>
     Follow me on Twitter
    </span>
    <span class="developer">
     <img src="https://pbs.twimg.com/profile_images/1253782473953157124/x56UURmt_400x400.jpg" />
     Aysenur Turk — @@AysnrTrkk
    </span>
   </a>
  </div>
 </div>
@code{

    //private List<RecentChat> RecentChats;

    [Parameter]
    public string typeChat{ get; set; }
    [Parameter]
    public string chatId{ get; set; }

    //private GroupResponse group{ get; set; }
    //private UserOrContactResponse UserResponse{ get; set; }

    //private int pageMember{ get; set; }
    //private ResponseGetMembers MembersOfGroup { get; set; }
    NewMessage? RefNewMessage;


    //protected override async Task OnInitializedAsync()
    //{
    //    // RecentChats.AddRange(await _chatRepository.GetRecentChat());

    //    await _hubConnect.BuildConnect("true");
    //    await _hubConnect.Connect();
    //    _hubConnect.ReciveMessage(NewMessage);
    //    //if (typeChat=="group")
    //    //{
    //    //  var Members= await GetMember(3, 1);
    //    //}

    //}

    //private async void NewMessage(string data)
    //{
    //    var message= JsonConvert.DeserializeObject<ResponseMessage>(data);
    //    var messageLocal = await _chatRepository.NewMessageService(message);



    //}
    void OpenModal()
    {
        RefNewMessage.OpenNewMessageModal();
    }
    //private async Task<ResponseGetMembers> GetMember(int take,int page)
    //{
    //    return null;
    //}
    //class UserOrContactResponse
    //{
    //    public string FullName{ get; set; }
    //    public string ImageProfile{ get; set; }
    //    public ValidToChat validToChat{ get; set; }

    //}
    //class ValidToChat
    //{
    //    public bool ValidChat{ get; set; }
    //    public string Message{ get; set; }

    //}
    //class GroupResponse
    //{
    //    public Group Group{ get; set; }
    //    public ValidToChat ValidToChat{ get; set; }
    //}
    //class ResponseGetMembers
    //{
    //    public int MemberCount{ get; set; }
    //    public int Page{ get; set; }
    //    public List<ResponseUser> ResponseUsers{ get; set; }
    //}

 }